#ifndef __OML_PRO__
#define __OML_PRO__
 
/*
   Prototypes for directory : OML
   Generated by pimmsccs on Tue Nov  3 13:54:09 GMT 1992
*/
 
/* OMUPD KJW 15/12/92 Include the OMLInclude.h header file */

#include "OMLInclude.h"

int OMLCheckDir (char * Directory);
 
short OMLCheckProc (int pid );
 
int OMLClrNoDlay(int filedes);
 
int OMLSetNoDlay(int filedes);
 
int OMLchdir (char * NewDirect);
 
int OMLclos ( int filedes );
 
double OMLdifftime (time_t time2 ,time_t time1);
 
void OMLexec (void * List [ ] );
 
int OMLfgetpos (FILE * Stream ,fpos_t * ptr);
 
int OMLfread ( int filedes , char * buf , unsigned MaxBytes );
 
void OMLfree (VoidPtr MemPtr );
 
int OMLfsetpos (FILE * Stream ,fpos_t * ptr);
 
int OMLfwrt ( int filedes , char * buf );
 
char *OMLgetcwd( char *var, int size);
 
char * OMLgetenv (char * var ,short trans);
 
void * OMLmalloc ( size_t ReqSize );
 
int OMLopen ( char * Path , char * Access );
 
short OMLpause ( void );
 
int OMLpcreatev ( char * Path , char * Args [ ] );
 
int OMLpcreatevp ( char * Path , char * Args [ ] );
 
void OMLpipeclose (int filedes [ 2 ]);
 
int OMLpipeopen (int filedes [ 2 ]);
 
int OMLpiperead ( int pipe , int childpid ,     int WaitTime ,  char * Buf , uint NumChar );
 
int OMLpipewrite (int pipe ,char * Buf ,unsigned int NumChar);
 
int OMLread ( int filedes , char * buf , unsigned nbyte );
 
void * OMLrealloc ( VoidPtr MemPtr , size_t ReqSize );
 
long OMLseek ( int filedes , long offset , int whence    );
 
short OMLsleep (unsigned seconds);
 
int OMLwait ( int *status );
 
int OMLwrit ( int filedes , char * buf , unsigned nbyte );
 
#endif
